# secrets.yaml: 민감 정보를 정의합니다.
# HashiCorp Vault, Azure Key Vault 같은 외부 Secret 관리 도구를 사용하거나,
# 접근 제어가 되는 안전한 곳에 보관하는 것을 권장합니다.
#
# 이 파일을 먼저 클러스터에 적용해야 합니다. (kubectl apply -f secrets.yaml)
#
# *모든 내용은 예시이므로 사용자의 환경에 맞게 수정이 필요합니다.**
#

---
# PostgreSQL, Metabase 공용 Secret
apiVersion: v1
kind: Secret
metadata:
  name: pr1sm-secrets
stringData:
  # [수정 필요] 운영 환경에서는 아래 값들을 더 안전한 값으로 변경해야 합니다.
  postgres-password: "metabase_pr1sm_strong_password"
  metabase-secret-key: "metabase-pr1sm-secret-key-1"
---
# Flask 애플리케이션 전용 Secret
apiVersion: v1
kind: Secret
metadata:
  name: flask-app-secrets
stringData:
  # 운영 환경에서는 아래 값들을 실제 값으로 변경해야 합니다.
  # 변경 후에는 rollout을 해야 적용됩니다.
  SECRET_KEY: "your-flask-secret-key"
  METABASE_SITE: "https://dashboard.pr1sm.cloud" # Metabase 서비스의 실제 접속 주소
  METABASE_SECRET: "metabase-pr1sm-secret-key-1" # pr1sm-secrets의 값과 일치해야 합니다.
  METABASE_DASH_ID: "1" # 예시 대시보드 ID
  METABASE_DASH_URL: "https://dashboard.pr1sm.cloud/public/dashboard/..." # 예시 대시보드 URL
  GOOGLE_DRIVE_FILE_ID: "your_google_drive_file_id"
